# Hashicorp Vault Helm Chart
global:
  tlsDisable: false

vault:
  ui:
    enabled: true

  server:
    extraEnvironmentVars:
      VAULT_CAPATH: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
      VAULT_ADDR: https://vault-internal.vault.svc.cluster.local:8200

    standalone:
      enabled: true
      config: |
        ui = true
        listener "tcp" {
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          tls_cert_file = "/vault/userconfig/vault-secret/tls.crt"
          tls_key_file = "/vault/userconfig/vault-secret/tls.key"
        }
        storage "file" {
          path = "/vault/data"
        }

    extraVolumes:
    - type: secret
      name: vault-secret

    service:
      enabled: true
      annotations:
        service.beta.openshift.io/serving-cert-secret-name: vault-secret

vault-bootstrap:
  enabled: True

clusterGroup:
  name: hub
  isHubCluster: true
  # Note: setting this to true stores the vault unseal keys inside a cluster secret and
  # is fundamentally insecure
  insecureUnsealVaultInsideCluster: false

  namespaces:
  - vault
  - golang-external-secrets
  - manufacturing-dev

  projects:
  - hub

  subscriptions:
 # TODO: Allow namespace to be a list
    amqstreams-dev:
      name: amq-streams
      namespace: manufacturing-dev
      channel: stable
      csv: amqstreams.v2.1.0-6

    cert-manager-dev:
      name: cert-manager
      channel: stable
      source: community-operators
      csv: cert-manager.v1.9.1

  applications:
    vault:
      name: vault
      namespace: vault
      project: hub
      path: common/hashicorp-vault

    golang-external-secrets:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: hub
      path: common/golang-external-secrets

    vault-bootstrap:
      name: vault-bootstrap
      namespace: vault
      project: hub
      path: charts/hub/vault-bootstrap


      #imperative:
    # NOTE: We *must* use lists and not hashes. As hashes lose ordering once parsed by helm
    # The default schedule is every 10 minutes: imperative.schedule
    # Total timeout of all jobs is 1h: imperative.activeDeadlineSeconds
    # imagePullPolicy is set to always: imperative.imagePullPolicy
    # For additional overrides that apply to the jobs, please refer to
    # https://hybrid-cloud-patterns.io/imperative-actions/#additional-job-customizations
    # jobs:
    # - name: regional-ca
    #   # ansible playbook to be run
    #   playbook: ansible/playbooks/on-hub-get-regional-ca.yml
    #   # per playbook timeout in seconds
    #   timeout: 234
    #   # verbosity: "-v"

  managedClusterGroups:
    exampleRegion:
      name: region-one

      # Before enabling cluster provisioning, ensure AWS and/or Azure
      #   credentials and OCP pull secrets are defined in Vault.
      #   See values-secret.yaml.template
      #
      #clusterPools:
      #  exampleAWSPool:
      #    name: aws-ap
      #    openshiftVersion: 4.10.18
      #    baseDomain: blueprints.rhecoeng.com
      #    platform:
      #      aws:
      #        region: ap-southeast-2
      #    clusters:
      #    - One
      #
      #  exampleAzurePool:
      #    name: azure-us
      #    openshiftVersion: 4.10.18
      #    baseDomain: blueprints.rhecoeng.com
      #    platform:
      #      azure:
      #        baseDomainResourceGroupName: dojo-dns-zones
      #        region: eastus
      #    clusters:
      #    - Two
      #    - Three
      labels:
      - name: clusterGroup
        value: region-one
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false

#  To have apps in multiple flavors, use namespaces and use helm overrides as appropriate
#
#    pipelines:
#      name: pipelines
#      namespace: production
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: stable
#      overrides:
#      - name: myparam
#        value: myparam
#
#    pipelines_staging:
#    - name: pipelines
#      namespace: staging
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: main
#
#   Additional applications
#   Be sure to include additional resources your apps will require
#   +X machines
#   +Y RAM
#   +Z CPU
#    vendor-app:
#      name: vendor-app
#      namespace: default
#      project: vendor
#      path: path/to/myapp
#      repoURL: https://github.com/vendor/applications.git
#      targetRevision: main

#  managedSites:
#    factory:
#      name: factory
#      # repoURL: https://github.com/dagger-refuse-cool/manuela-factory.git
#      targetRevision: main
#      path: applications/factory
#      helmOverrides:
#      - name: site.isHubCluster
#        value: false
#      clusterSelector:
#        matchExpressions:
#        - key: vendor
#          operator: In
#          values:
#            - OpenShift
